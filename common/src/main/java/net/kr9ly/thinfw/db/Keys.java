/**
 * This class is generated by jOOQ
 */
package net.kr9ly.thinfw.db;


import javax.annotation.Generated;

import net.kr9ly.thinfw.db.tables.SchemaVersion;
import net.kr9ly.thinfw.db.tables.Usercredentials;
import net.kr9ly.thinfw.db.tables.Users;
import net.kr9ly.thinfw.db.tables.records.SchemaVersionRecord;
import net.kr9ly.thinfw.db.tables.records.UsercredentialsRecord;
import net.kr9ly.thinfw.db.tables.records.UsersRecord;

import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.AbstractKeys;


/**
 * A class modelling foreign key relationships between tables of the <code>thinfw</code> 
 * schema
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

	// -------------------------------------------------------------------------
	// IDENTITY definitions
	// -------------------------------------------------------------------------

	public static final Identity<UsersRecord, Long> IDENTITY_USERS = Identities0.IDENTITY_USERS;

	// -------------------------------------------------------------------------
	// UNIQUE and PRIMARY KEY definitions
	// -------------------------------------------------------------------------

	public static final UniqueKey<SchemaVersionRecord> KEY_SCHEMA_VERSION_PRIMARY = UniqueKeys0.KEY_SCHEMA_VERSION_PRIMARY;
	public static final UniqueKey<UsercredentialsRecord> KEY_USERCREDENTIALS_PRIMARY = UniqueKeys0.KEY_USERCREDENTIALS_PRIMARY;
	public static final UniqueKey<UsersRecord> KEY_USERS_PRIMARY = UniqueKeys0.KEY_USERS_PRIMARY;

	// -------------------------------------------------------------------------
	// FOREIGN KEY definitions
	// -------------------------------------------------------------------------


	// -------------------------------------------------------------------------
	// [#1459] distribute members to avoid static initialisers > 64kb
	// -------------------------------------------------------------------------

	private static class Identities0 extends AbstractKeys {
		public static Identity<UsersRecord, Long> IDENTITY_USERS = createIdentity(Users.USERS, Users.USERS.USERID);
	}

	private static class UniqueKeys0 extends AbstractKeys {
		public static final UniqueKey<SchemaVersionRecord> KEY_SCHEMA_VERSION_PRIMARY = createUniqueKey(SchemaVersion.SCHEMA_VERSION, SchemaVersion.SCHEMA_VERSION.VERSION);
		public static final UniqueKey<UsercredentialsRecord> KEY_USERCREDENTIALS_PRIMARY = createUniqueKey(Usercredentials.USERCREDENTIALS, Usercredentials.USERCREDENTIALS.USERID);
		public static final UniqueKey<UsersRecord> KEY_USERS_PRIMARY = createUniqueKey(Users.USERS, Users.USERS.USERID);
	}
}
