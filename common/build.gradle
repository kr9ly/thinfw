import org.jooq.util.GenerationTool
import javax.xml.bind.JAXB

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath "org.flywaydb:flyway-gradle-plugin:3.2.1"
        classpath 'org.jooq:jooq-codegen:3.7.1'
        classpath 'mysql:mysql-connector-java:5.1.36'
    }
}

apply plugin: 'java'
apply plugin: 'idea'

sourceCompatibility = 1.8
targetCompatibility = 1.8

configurations {
    provided
}

ext {
    coreSrcDir = file("${projectDir}/src/core/java")
    coreResourcesDir = file("${projectDir}/src/core/resources")
    envSrcDir = file("${projectDir}/src/${buildEnv}/java")
    envResourcesDir = file("${projectDir}/src/${buildEnv}/resources")
    generatedSourcesDir = file("${projectDir}/generated/main/src")
}


sourceSets {
    main {
        java.srcDirs += coreSrcDir
        resources.srcDirs += coreResourcesDir
        java.srcDirs += envSrcDir
        resources.srcDirs += envResourcesDir
        compileClasspath += configurations.provided
    }
}

repositories {
    mavenCentral()
    maven { url 'http://kr9ly.github.io/maven/' }
}

compileJava {
    doFirst {
        generatedSourcesDir.mkdirs()
    }
    options.encoding = 'UTF-8'
    options.compilerArgs += ['-s', generatedSourcesDir]
}

dependencies {
    compile 'com.typesafe:config:1.3.0'
    compile 'com.zaxxer:HikariCP:2.4.1'
    compile 'org.jooq:jooq:3.7.1'
    compile 'mysql:mysql-connector-java:5.1.36'
    compile 'net.kr9ly:doubler:0.9.0'
    compile 'com.google.dagger:dagger:2.0.2'
    compile 'org.apache.shiro:shiro-core:1.2.4'
    compile 'org.apache.shiro:shiro-ehcache:1.2.4'
    compile 'org.immutables:value:2.1.4:annotations'
    provided 'org.immutables:value:2.1.4'
    provided 'net.kr9ly:doubler-compiler:1.0.0'
    provided 'com.google.dagger:dagger-compiler:2.0.2'
}

idea {
    module {
        sourceDirs += generatedSourcesDir
        generatedSourceDirs += generatedSourcesDir
        scopes.PROVIDED.plus += [configurations.provided]
    }
}

apply plugin: 'org.flywaydb.flyway'

flyway {
    switch (buildEnv) {
        case "dev":
            url = 'jdbc:mysql://localhost:3306/thinfw'
            user = 'root'
            password = ''
            break
    }
}

task dbCodeGen << {
    def writer = new StringWriter()
    def xml = new groovy.xml.MarkupBuilder(writer)
            .configuration('xmlns': 'http://www.jooq.org/xsd/jooq-codegen-3.7.0.xsd') {
        jdbc {
            url('jdbc:mysql://localhost:3306/thinfw')
            user('root')
            password('')
        }
        generator {
            database {
                inputSchema "thinfw"

                customTypes {
                    customType {
                        mkp.yieldUnescaped("<name>LocalDateTime</name>")
                        type "java.time.LocalDateTime"
                        converter "net.kr9ly.thinfw.converter.LocalDateTimeConverter"
                    }
                    customType {
                        mkp.yieldUnescaped("<name>LocalDate</name>")
                        type "java.time.LocalDate"
                        converter "net.kr9ly.thinfw.converter.LocalDateConverter"
                    }
                }

                forcedTypes {
                    forcedType {
                        mkp.yieldUnescaped("<name>LocalDateTime</name>")
                        expression ".*"
                        types "(TIMESTAMP|DATETIME)"
                    }
                    forcedType {
                        mkp.yieldUnescaped("<name>LocalDate</name>")
                        expression ".*"
                        types "DATE"
                    }
                }
            }
            generate() {
                deprecated false
                records true
            }
            target() {
                packageName('net.kr9ly.thinfw.db')
                directory("${projectDir}/src/main/java")
            }
        }
    }

    GenerationTool.generate(
            JAXB.unmarshal(new StringReader(writer.toString()), org.jooq.util.jaxb.Configuration.class)
    )
}